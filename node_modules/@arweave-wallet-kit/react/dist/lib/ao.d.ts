export interface Config {
    CU_URL: string;
    MU_URL: string;
    GATEWAY_URL?: string;
}
export declare const defaultConfig: Config;
export declare const joinUrl: ({ url, path }: {
    url: string;
    path: string;
}) => string;
export declare function safeDecode<R = unknown>(data: any): R;
export declare class BaseError extends Error {
    constructor(message: string);
}
export declare class AOProcess {
    private processId;
    private ao;
    constructor({ processId, connectionConfig, }: {
        processId: string;
        connectionConfig?: {
            CU_URL: string;
            MU_URL: string;
            GATEWAY_URL: string;
            GRAPHQL_URL: string;
        };
    });
    read<K>({ tags, retries, }: {
        tags?: Array<{
            name: string;
            value: string;
        }>;
        retries?: number;
    }): Promise<K>;
}

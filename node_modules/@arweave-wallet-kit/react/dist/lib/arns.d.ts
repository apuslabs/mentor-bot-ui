export declare const AO_ARNS_PROCESS = "qNvAoz0TgcH7DMg8BCVn8jF32QH5L6T29VjHxhHqqGE";
export type ProcessId = string;
export type WalletAddress = string;
export type RegistrationType = "lease" | "permabuy";
export type AoArNSBaseNameData = {
    processId: ProcessId;
    startTimestamp: number;
    type: RegistrationType;
    undernameLimit: number;
    purchasePrice: number;
};
export type ANTRecord = {
    transactionId: string;
    ttlSeconds: number;
};
export type AoANTState = {
    Name: string;
    Ticker: string;
    Denomination: number;
    Owner: WalletAddress;
    Controllers: WalletAddress[];
    Records: Record<string, ANTRecord>;
    Balances: Record<WalletAddress, number>;
    Logo: string;
    TotalSupply: number;
    Initialized: boolean;
};
export type ArNSPrimaryName = {
    owner: WalletAddress;
    name: string;
    startTimestamp: number;
    processId: string;
};
export declare function getANTState(processId: string, retries?: number): Promise<AoANTState>;
/**
 * Generalized method to find the logo (avatar) for an ArNS name.
 * Fetches the ArNS record and ANT info to retrieve the transaction ID for the logo.
 * @param name - The ArNS name to fetch the logo for.
 * @returns The transaction ID of the logo if found, otherwise undefined.
 */
export declare function findLogo(processId: string): Promise<string | undefined>;
/**
 * Fetches the primary ArNS name for a wallet address.
 * @param address - Wallet address to fetch the primary name for.
 * @returns Primary name record or undefined.
 */
export declare function getPrimaryArNSName(address: WalletAddress): Promise<ArNSPrimaryName | undefined>;
